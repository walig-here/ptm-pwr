A51 MACRO ASSEMBLER  LAB2                                                                 03/22/2023 00:10:57 PAGE     1


MACRO ASSEMBLER A51 V8.2.7.0
OBJECT MODULE PLACED IN .\Objects\lab2.obj
ASSEMBLER INVOKED BY: C:\Keil_v5\C51\BIN\A51.EXE lab2.asm SET(SMALL) DEBUG PRINT(.\Listings\lab2.lst) OBJECT(.\Objects\l
                      ab2.obj) EP

LOC  OBJ            LINE     SOURCE

                       1     ;------------------------------------------------------------------
                       2     ;                                               BLOK SEGMENTÓW
                       3     
                       4     PROCEDURES      SEGMENT CODE
                       5     UTIL_PROC       SEGMENT CODE
                       6     STACK           SEGMENT DATA
                       7             
----                   8                             RSEG STACK
0000                   9     stack_low:      DS                              8
                      10     
                      11     ;------------------------------------------------------------------
                      12     ;                                               BLOK STALYCH
                      13     
  0004                14     BLOCK_LEN       EQU                             4                                          
                                  ; dlugosc bufora w pamieci XRAM/IRAM
  0000                15     XBLOCK_ADR      EQU                             0h                                         
                                  ; adres poczatku bufora w pamieci XRAM
  0030                16     IBLOCK_ADR      EQU                             30h                                        
                                  ; adres poczatku bufora w pamieci IRAM
                      17     
                      18     ;------------------------------------------------------------------
                      19     ;                                               BLOK STARTOWY
                      20                             
----                  21                             CSEG AT                 0                                          
                                          
0000 758100   F       22                             MOV                             SP, #stack_low
0003 8022             23                             SJMP                    loop    
                      24             
0005 900000           25                             MOV                             DPTR, #XBLOCK_ADR                  
                                  ; Zadanie 1
0008 7A04             26                             MOV                             R2, #BLOCK_LEN
000A 120000   F       27                             LCALL                   sum_xram
000D 8018             28                             SJMP                    loop
                      29     
000F 900000           30                             MOV                             DPTR, #XBLOCK_ADR                  
                                  ; Zadanie 2
0012 7A04             31                             MOV                             R2, #BLOCK_LEN
0014 7830             32                             MOV                             R0, #IBLOCK_ADR
0016 120000   F       33                             LCALL                   copy_xram_iram_inv
0019 800C             34                             SJMP                    loop
                      35                                             
001B 900000           36                             MOV                             DPTR, #XBLOCK_ADR                  
                                  ; Zadanie 3
001E 7A04             37                             MOV                             R2, #BLOCK_LEN
0020 7830             38                             MOV                             R0, #IBLOCK_ADR
0022 120000   F       39                             LCALL                   copy_iram_xram_z
0025 8000             40                             SJMP                    loop    
0027                  41     loop:
0027 900000           42                             MOV                             DPTR, #XBLOCK_ADR                  
                                  ; Zadanie 4
002A 7A04             43                             MOV                             R2, #BLOCK_LEN
002C 7822             44                             MOV                             R0, #LOW(XBLOCK_ADR+22h)
002E 7900             45                             MOV                             R1, #HIGH(XBLOCK_ADR+22h)
0030 120000   F       46                             LCALL                   copy_xram_xram_2
0033 80F2             47                             SJMP                    loop
                      48                             
0035 7A04             49                             MOV                             R2, #BLOCK_LEN                     
A51 MACRO ASSEMBLER  LAB2                                                                 03/22/2023 00:10:57 PAGE     2

                                  ; Zadanie 5
0037 7830             50                             MOV                             R0, #IBLOCK_ADR
0039 120000   F       51                             LCALL                   count_range
003C 80E9             52                             SJMP                    loop
                      53     
                      54     ;------------------------------------------------------------------
                      55     ;                                               BLOK PROCEDUR
                      56                             
----                  57                             RSEG                    PROCEDURES
                      58     
                      59     ;---------------------------------------------------------------------
                      60     ; Sumowanie bloku danych w pamieci zewnetrznej (XRAM)
                      61     ;
                      62     ; Wejscie: DPTR  - adres poczatkowy bloku danych
                      63     ;          R2    - dlugosc bloku danych
                      64     ; Wyjscie: R7|R6 - 16-bit suma elementow bloku (Hi|Lo)
                      65     ;---------------------------------------------------------------------
0000                  66     sum_xram:
0000 7E00             67                             MOV                             R6, #0                             
                                  ; czyszczenie rejestrów wynikowych
0002 7F00             68                             MOV                             R7, #0
                      69                             
0004 EA               70                             MOV                             A, R2                              
                                  ; sprawdzenie czy wskazany blok nie jest zerowej dlugosci
0005 600B             71                             JZ                              reached_sum_buffers_end
                      72                             
0007                  73     add_next:
0007 C3               74                             CLR                             C                                  
                                          ; dodanie do mlodszego bajtu zawartosci z bloku danych
0008 E0               75                             MOVX                    A, @DPTR
0009 2E               76                             ADD                             A, R6                           
000A FE               77                             MOV                             R6, A
                      78                             
000B EF               79                             MOV                             A, R7                              
                                  ; dodanie ewentualnego przeniesienia do starszego bajtu
000C 3400             80                             ADDC                    A, #0
000E FF               81                             MOV                             R7, A
                      82                             
000F A3               83                             INC                             DPTR                               
                                  ; przejscie do kolejnej komórki pamieci (o ile nie dotarlismy do konca bufora)
0010 DAF5             84                             DJNZ                    R2, add_next
                      85                             
0012                  86     reached_sum_buffers_end:
0012 22               87                             RET                                                                
                                          ; dotarto do konca bufora
                      88                     
                      89                     
                      90     ;---------------------------------------------------------------------
                      91     ; Kopiowanie bloku z pamieci zewnetrznej (XRAM) do wewnetrznej (IRAM)
                      92     ; Przy kopiowaniu powinna byc odwrocona kolejnosc elementow
                      93     ;
                      94     ; Wejscie: DPTR - adres poczatkowy obszaru zrodlowego
                      95     ;          R0   - adres poczatkowy obszaru docelowego
                      96     ;          R2   - dlugosc kopiowanego obszaru
                      97     ;---------------------------------------------------------------------
0013                  98     copy_xram_iram_inv:             
0013 EA               99                             MOV                             A, R2                              
                                  ; sprzawdzenie, czy wskazany blok nie jest zerowej dlugosci
0014 6009            100                             JZ                              reached_cpy_xram_buffers_end
                     101                             
0016 28              102                             ADD                             A, R0                              
                                  ; przesuniecie wskaznika IRAM na koniec obszaru docelowego
0017 14              103                             DEC                             A
0018 F8              104                             MOV                             R0, A
                     105                             
0019                 106     copy_next_xram:
A51 MACRO ASSEMBLER  LAB2                                                                 03/22/2023 00:10:57 PAGE     3

0019 E0              107                             MOVX                    A, @DPTR                                ; k
                             opiowanie danych z XRAM do IRAM
001A F6              108                             MOV                             @R0, A
                     109                             
001B 18              110                             DEC                             R0                                 
                                          ; przesuniecie wskaznikow 
001C A3              111                             INC                             DPTR
001D DAFA            112                             DJNZ                    R2, copy_next_xram
                     113     
001F                 114     reached_cpy_xram_buffers_end:
001F 22              115                             RET
                     116     
                     117     
                     118     ;---------------------------------------------------------------------
                     119     ; Kopiowanie bloku z pamieci wewnetrznej (IRAM) do zewnetrznej (XRAM)
                     120     ; Przy kopiowaniu powinny byc pominiete elementy zerowe
                     121     ;
                     122     ; Wejscie: R0   - adres poczatkowy obszaru zrodlowego
                     123     ;          DPTR - adres poczatkowy obszaru docelowego
                     124     ;          R2   - dlugosc kopiowanego obszaru
                     125     ;---------------------------------------------------------------------
0020                 126     copy_iram_xram_z:
0020 EA              127                             MOV                             A, R2                              
                                  ; sprzawdzenie, czy wskazany blok nie jest zerowej dlugosci
0021 6009            128                             JZ                              reached_cpy_iram_buffers_end
                     129     
0023                 130     copy_next_iram:
0023 E6              131                             MOV                             A, @R0                             
                                  ; sprawdzenie, czy wartosc komorki jest niezerowa
0024 6003            132                             JZ                              iram_value_is_zero
                     133                             
0026 E6              134                             MOV                             A, @R0                             
                                  ; wykonanie kopii do XRAM i przesuniecie wskaznika w XRAM
0027 F0              135                             MOVX                    @DPTR, A
0028 A3              136                             INC                             DPTR
                     137                             
0029                 138     iram_value_is_zero:
0029 08              139                             INC                             R0                                 
                                          ; przesuniecie wskaznika w IRAM, przejscie do kopiowania kolejnej komorki
002A DAF7            140                             DJNZ                    R2, copy_next_iram
                     141     
002C                 142     reached_cpy_iram_buffers_end:
002C 22              143                             RET
                     144                             
                     145     ;---------------------------------------------------------------------
                     146     ; Kopiowanie bloku danych w pamieci zewnetrznej (XRAM -> XRAM)
                     147     ; Przy kopiowaniu elementy niezerowe powinny byc podwojone
                     148     ;
                     149     ; Wejscie: DPTR  - adres poczatkowy obszaru zrodlowego
                     150     ;          R1|R0 - adres poczatkowy obszaru docelowego
                     151     ;          R2    - dlugosc kopiowanego obszaru
                     152     ;---------------------------------------------------------------------
002D                 153     copy_xram_xram_2:
002D EA              154                             MOV                             A, R2                              
                                  ; sprawdzenie, czy wskazany blok nie jest zerowej dlugosci
002E 6012            155                             JZ                              reached_xram_end_2
                     156                             
0030                 157     copy_next_xram_to_xram:
0030 E0              158                             MOVX                    A, @DPTR                                ; k
                             opiuje dane do miejca docelowego
0031 89A0            159                             MOV                             P2, R1
0033 F2              160                             MOVX                    @R0, A
                     161                             
0034 120000   F      162                             LCALL                   increment_r1r0_pointer  ; zwiekszam adres m
                             iejsca docelowego, zachowujac jednoczesnie adres miejsca zrodlowego
                     163                             
A51 MACRO ASSEMBLER  LAB2                                                                 03/22/2023 00:10:57 PAGE     4

0037 6006            164                             JZ                              check_cpy_next                  ; j
                             ezeli element jest niezerowy do kopiuje go drugi raz
0039 89A0            165                             MOV                             P2, R1
003B F2              166                             MOVX                    @R0, A
003C 120000   F      167                             LCALL                   increment_r1r0_pointer
                     168                             
003F                 169     check_cpy_next:
003F A3              170                             INC                             DPTR
0040 DAEE            171                             DJNZ                    R2, copy_next_xram_to_xram
0042                 172     reached_xram_end_2:
0042 22              173                             RET
                     174     
                     175     ;---------------------------------------------------------------------
                     176     ; Zliczanie w bloku danych w pamieci wewnetrznej (IRAM)
                     177     ; liczb mieszczacych sie w przedziale domknietym <10,100>
                     178     ;
                     179     ; Wejscie: R0 - adres poczatkowy bloku danych
                     180     ;          R2 - dlugosc bloku danych
                     181     ; Wyjscie: A  - liczba elementow spelniajacych warunek
                     182     ;---------------------------------------------------------------------
0043                 183     count_range:
0043 EA              184                             MOV                             A, R2                              
                                          ; sprawdzenie, czy wskazany blok nie jest zerowej dlugosci
0044 6012            185                             JZ                              reached_count_end
0046 7400            186                             MOV                             A, #0                              
                                          ; wyzerowanie licznika
                     187                             
0048                 188     analyze_next:
0048 C3              189                             CLR                             C                                  
                                                  ; sprawdzenie, czy @R0<10
0049 B60A00          190                             CJNE                    @R0, #10, compared_to_10                   
                                          
004C                 191     compared_to_10:
004C 4007            192                             JC                              check_loop_condition               
                                  
                     193                             
004E C3              194                             CLR                     C                                          
                                          ; sprawdzenie, czy @R0>100
004F B66400          195                             CJNE                    @R0, #100, compared_to_100
0052                 196     compared_to_100:
0052 5001            197                             JNC                             check_loop_condition
                     198                             
0054 04              199                             INC                             A                                  
                                                  ; zliczenie komórki
0055                 200     check_loop_condition:
0055 08              201                             INC                             R0
0056 DAF0            202                             DJNZ                    R2, analyze_next
                     203                             
0058                 204     reached_count_end:
0058 22              205                             RET
                     206     
                     207     ;------------------------------------------------------------------
                     208     ;                                               BLOK PROCEDUR POMOCNICZYCH
                     209                             
----                 210                             RSEG                    UTIL_PROC
                     211     
                     212     ;------------------------------------------------------------------
                     213     ; Inkrementuje 16-bitowy wskaznik R1|R0
                     214     ;------------------------------------------------------------------
0000                 215     increment_r1r0_pointer:
0000 C083            216                     PUSH                    DPH                                             
0002 C082            217                     PUSH                    DPL
0004 8983            218                     MOV                             DPH, R1
0006 8882            219                     MOV                             DPL, R0
0008 A3              220                     INC                             DPTR
0009 A983            221                     MOV                             R1, DPH
A51 MACRO ASSEMBLER  LAB2                                                                 03/22/2023 00:10:57 PAGE     5

000B A882            222                     MOV                             R0, DPL
000D D082            223                     POP                             DPL
000F D083            224                     POP                             DPH
0011 22              225                     RET
                     226                     
                     227     ;------------------------------------------------------------------
                     228                             END
A51 MACRO ASSEMBLER  LAB2                                                                 03/22/2023 00:10:57 PAGE     6

SYMBOL TABLE LISTING
------ ----- -------


N A M E                       T Y P E  V A L U E   ATTRIBUTES

ADD_NEXT . . . . . . . . . .  C ADDR   0007H   R   SEG=PROCEDURES
ANALYZE_NEXT . . . . . . . .  C ADDR   0048H   R   SEG=PROCEDURES
BLOCK_LEN. . . . . . . . . .  N NUMB   0004H   A   
CHECK_CPY_NEXT . . . . . . .  C ADDR   003FH   R   SEG=PROCEDURES
CHECK_LOOP_CONDITION . . . .  C ADDR   0055H   R   SEG=PROCEDURES
COMPARED_TO_10 . . . . . . .  C ADDR   004CH   R   SEG=PROCEDURES
COMPARED_TO_100. . . . . . .  C ADDR   0052H   R   SEG=PROCEDURES
COPY_IRAM_XRAM_Z . . . . . .  C ADDR   0020H   R   SEG=PROCEDURES
COPY_NEXT_IRAM . . . . . . .  C ADDR   0023H   R   SEG=PROCEDURES
COPY_NEXT_XRAM . . . . . . .  C ADDR   0019H   R   SEG=PROCEDURES
COPY_NEXT_XRAM_TO_XRAM . . .  C ADDR   0030H   R   SEG=PROCEDURES
COPY_XRAM_IRAM_INV . . . . .  C ADDR   0013H   R   SEG=PROCEDURES
COPY_XRAM_XRAM_2 . . . . . .  C ADDR   002DH   R   SEG=PROCEDURES
COUNT_RANGE. . . . . . . . .  C ADDR   0043H   R   SEG=PROCEDURES
DPH. . . . . . . . . . . . .  D ADDR   0083H   A   
DPL. . . . . . . . . . . . .  D ADDR   0082H   A   
IBLOCK_ADR . . . . . . . . .  N NUMB   0030H   A   
INCREMENT_R1R0_POINTER . . .  C ADDR   0000H   R   SEG=UTIL_PROC
IRAM_VALUE_IS_ZERO . . . . .  C ADDR   0029H   R   SEG=PROCEDURES
LOOP . . . . . . . . . . . .  C ADDR   0027H   A   
P2 . . . . . . . . . . . . .  D ADDR   00A0H   A   
PROCEDURES . . . . . . . . .  C SEG    0059H       REL=UNIT
REACHED_COUNT_END. . . . . .  C ADDR   0058H   R   SEG=PROCEDURES
REACHED_CPY_IRAM_BUFFERS_END  C ADDR   002CH   R   SEG=PROCEDURES
REACHED_CPY_XRAM_BUFFERS_END  C ADDR   001FH   R   SEG=PROCEDURES
REACHED_SUM_BUFFERS_END. . .  C ADDR   0012H   R   SEG=PROCEDURES
REACHED_XRAM_END_2 . . . . .  C ADDR   0042H   R   SEG=PROCEDURES
SP . . . . . . . . . . . . .  D ADDR   0081H   A   
STACK. . . . . . . . . . . .  D SEG    0008H       REL=UNIT
STACK_LOW. . . . . . . . . .  D ADDR   0000H   R   SEG=STACK
SUM_XRAM . . . . . . . . . .  C ADDR   0000H   R   SEG=PROCEDURES
UTIL_PROC. . . . . . . . . .  C SEG    0012H       REL=UNIT
XBLOCK_ADR . . . . . . . . .  N NUMB   0000H   A   


REGISTER BANK(S) USED: 0 


ASSEMBLY COMPLETE.  0 WARNING(S), 0 ERROR(S)
